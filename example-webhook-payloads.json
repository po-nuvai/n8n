{
  "description": "Example webhook payloads for testing the Food Delivery WhatsApp workflow",
  "webhookEndpoint": "POST http://localhost:5678/webhook/order-status-update",

  "examples": {
    "1_order_received": {
      "description": "Send when order is first received from customer",
      "payload": {
        "orderStatus": "order_received",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerPhone": "1234567890",
        "orderItems": "2x Margherita Pizza, 1x Garlic Bread, 2x Coca Cola"
      },
      "expectedWhatsAppMessage": "Hi John Doe, we've received your order #ORD-12345 for 2x Margherita Pizza, 1x Garlic Bread, 2x Coca Cola. We're preparing it now! üéâ\n\nThank you for choosing us!"
    },

    "2_in_process": {
      "description": "Send when kitchen starts preparing the order",
      "payload": {
        "orderStatus": "in_process",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerPhone": "1234567890",
        "estimatedTime": "25"
      },
      "expectedWhatsAppMessage": "Hi John Doe, your order #ORD-12345 is being prepared by our kitchen! üë®‚Äçüç≥\n\nEstimated time: 25 minutes.\n\nWe'll notify you when it's ready for dispatch!"
    },

    "3_dispatched": {
      "description": "Send when order is out for delivery",
      "payload": {
        "orderStatus": "dispatched",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerPhone": "1234567890",
        "driverName": "Mike Smith",
        "driverPhone": "9876543210",
        "trackingLink": "https://track.yourfoodapp.com/orders/ORD-12345"
      },
      "expectedWhatsAppMessage": "Hi John Doe, your order #ORD-12345 is on its way! üöÄ\n\nDriver: Mike Smith\nContact: 9876543210\n\nTrack your order: https://track.yourfoodapp.com/orders/ORD-12345\n\nEnjoy your meal!"
    }
  },

  "testScenarios": {
    "complete_order_flow": {
      "description": "Test complete order lifecycle",
      "steps": [
        {
          "step": 1,
          "action": "Customer places order",
          "payload": "examples.1_order_received.payload",
          "waitTime": "Wait 2-3 minutes"
        },
        {
          "step": 2,
          "action": "Kitchen starts preparing",
          "payload": "examples.2_in_process.payload",
          "waitTime": "Wait 20-25 minutes (or as per estimatedTime)"
        },
        {
          "step": 3,
          "action": "Order dispatched",
          "payload": "examples.3_dispatched.payload",
          "waitTime": "Order delivered"
        }
      ]
    },

    "multiple_customers": {
      "description": "Test multiple simultaneous orders",
      "orders": [
        {
          "orderId": "ORD-001",
          "customerName": "Alice Johnson",
          "customerPhone": "1111111111",
          "orderItems": "1x Pepperoni Pizza, 1x Caesar Salad"
        },
        {
          "orderId": "ORD-002",
          "customerName": "Bob Williams",
          "customerPhone": "2222222222",
          "orderItems": "3x Burger Combo, 2x Fries"
        },
        {
          "orderId": "ORD-003",
          "customerName": "Carol Davis",
          "customerPhone": "3333333333",
          "orderItems": "2x Pasta Carbonara, 1x Tiramisu"
        }
      ],
      "note": "Send all three order_received payloads simultaneously to test concurrent processing"
    }
  },

  "curlCommands": {
    "order_received": "curl -X POST http://localhost:5678/webhook/order-status-update \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"orderStatus\": \"order_received\",\n    \"orderId\": \"ORD-12345\",\n    \"customerName\": \"John Doe\",\n    \"customerPhone\": \"1234567890\",\n    \"orderItems\": \"2x Margherita Pizza, 1x Garlic Bread, 2x Coca Cola\"\n  }'",

    "in_process": "curl -X POST http://localhost:5678/webhook/order-status-update \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"orderStatus\": \"in_process\",\n    \"orderId\": \"ORD-12345\",\n    \"customerName\": \"John Doe\",\n    \"customerPhone\": \"1234567890\",\n    \"estimatedTime\": \"25\"\n  }'",

    "dispatched": "curl -X POST http://localhost:5678/webhook/order-status-update \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"orderStatus\": \"dispatched\",\n    \"orderId\": \"ORD-12345\",\n    \"customerName\": \"John Doe\",\n    \"customerPhone\": \"1234567890\",\n    \"driverName\": \"Mike Smith\",\n    \"driverPhone\": \"9876543210\",\n    \"trackingLink\": \"https://track.yourfoodapp.com/orders/ORD-12345\"\n  }'"
  },

  "phoneNumberFormats": {
    "note": "Phone numbers must be in international format WITHOUT + or 00 prefix",
    "examples": {
      "US": {
        "format": "1AAABBBCCCC",
        "example": "14155551234",
        "description": "1 (country code) + 10 digit number"
      },
      "India": {
        "format": "91AAABBBCCCC",
        "example": "919876543210",
        "description": "91 (country code) + 10 digit number"
      },
      "UK": {
        "format": "44AAABBBBBBBB",
        "example": "447911123456",
        "description": "44 (country code) + mobile number"
      },
      "UAE": {
        "format": "971AABBBCCCC",
        "example": "971501234567",
        "description": "971 (country code) + mobile number"
      },
      "Singapore": {
        "format": "65ABBBCCCC",
        "example": "6591234567",
        "description": "65 (country code) + 8 digit number"
      }
    },
    "wrongFormats": [
      "+14155551234",
      "0014155551234",
      "+919876543210",
      "(415) 555-1234"
    ]
  },

  "errorScenarios": {
    "missing_required_field": {
      "description": "Test missing customerPhone field",
      "payload": {
        "orderStatus": "order_received",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "orderItems": "2x Pizza"
      },
      "expectedError": "WhatsApp API will fail - missing recipient phone number"
    },

    "invalid_status": {
      "description": "Test invalid order status",
      "payload": {
        "orderStatus": "invalid_status",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerPhone": "1234567890"
      },
      "expectedBehavior": "Workflow will not match any switch case - no WhatsApp message sent"
    },

    "invalid_phone_format": {
      "description": "Test invalid phone number format",
      "payload": {
        "orderStatus": "order_received",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerPhone": "+1234567890",
        "orderItems": "2x Pizza"
      },
      "expectedError": "WhatsApp API may reject due to invalid phone format"
    },

    "missing_status_specific_field": {
      "description": "Test missing estimatedTime for in_process status",
      "payload": {
        "orderStatus": "in_process",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerPhone": "1234567890"
      },
      "expectedError": "WhatsApp template will have empty parameter - message may look incomplete"
    }
  },

  "advancedExamples": {
    "order_with_special_characters": {
      "description": "Test order with special characters and emojis",
      "payload": {
        "orderStatus": "order_received",
        "orderId": "ORD-12345",
        "customerName": "Jos√© Garc√≠a",
        "customerPhone": "1234567890",
        "orderItems": "2x Pizza Margherita üçï, 1x Caf√© Latte ‚òï"
      }
    },

    "long_order_items": {
      "description": "Test with long order items list",
      "payload": {
        "orderStatus": "order_received",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerPhone": "1234567890",
        "orderItems": "2x Large Pepperoni Pizza, 1x Medium Vegetarian Pizza, 3x Garlic Bread, 2x Caesar Salad, 4x Coca Cola, 2x Orange Juice, 1x Chocolate Cake, 1x Tiramisu"
      },
      "note": "WhatsApp templates have character limits - ensure message doesn't get truncated"
    },

    "international_phone": {
      "description": "Test with international phone number",
      "payload": {
        "orderStatus": "order_received",
        "orderId": "ORD-12345",
        "customerName": "Raj Kumar",
        "customerPhone": "919876543210",
        "orderItems": "2x Chicken Biryani, 1x Paneer Tikka"
      }
    },

    "with_tracking_url": {
      "description": "Test dispatched status with real-time tracking",
      "payload": {
        "orderStatus": "dispatched",
        "orderId": "ORD-12345",
        "customerName": "Sarah Lee",
        "customerPhone": "1234567890",
        "driverName": "David Chen",
        "driverPhone": "9876543210",
        "trackingLink": "https://maps.google.com/?q=40.7128,-74.0060"
      },
      "note": "Can use Google Maps link for real-time tracking"
    }
  }
}
