{
  "description": "Example webhook payloads for testing the Food Delivery Telegram Notification System",
  "webhookUrl": "https://your-n8n-instance.app.n8n.cloud/webhook/order-status-update",
  "note": "Replace 'YOUR_CHAT_ID' with your actual Telegram chat ID. Get it by messaging your bot and visiting: https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates",

  "examples": {
    "1_order_received": {
      "description": "Sent when customer places an order",
      "payload": {
        "orderStatus": "order_received",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerChatId": "123456789",
        "orderItems": "2x Margherita Pizza, 1x Coca Cola, 1x Garlic Bread"
      },
      "expectedMessage": "üéâ Order Received!\n\nHi John Doe, we've received your order #ORD-12345 for 2x Margherita Pizza, 1x Coca Cola, 1x Garlic Bread. We're preparing it now!\n\nThank you for choosing us!",
      "curlCommand": "curl -X POST https://your-n8n-instance.app.n8n.cloud/webhook/order-status-update \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"orderStatus\": \"order_received\",\n    \"orderId\": \"ORD-12345\",\n    \"customerName\": \"John Doe\",\n    \"customerChatId\": \"123456789\",\n    \"orderItems\": \"2x Margherita Pizza, 1x Coca Cola, 1x Garlic Bread\"\n  }'"
    },

    "2_in_process": {
      "description": "Sent when kitchen starts preparing the order",
      "payload": {
        "orderStatus": "in_process",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerChatId": "123456789",
        "estimatedTime": "25"
      },
      "expectedMessage": "üë®‚Äçüç≥ Order In Process\n\nHi John Doe, your order #ORD-12345 is being prepared by our kitchen!\n\n‚è±Ô∏è Estimated time: 25 minutes\n\nWe'll notify you when it's ready for dispatch!",
      "curlCommand": "curl -X POST https://your-n8n-instance.app.n8n.cloud/webhook/order-status-update \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"orderStatus\": \"in_process\",\n    \"orderId\": \"ORD-12345\",\n    \"customerName\": \"John Doe\",\n    \"customerChatId\": \"123456789\",\n    \"estimatedTime\": \"25\"\n  }'"
    },

    "3_dispatched": {
      "description": "Sent when order is dispatched for delivery",
      "payload": {
        "orderStatus": "dispatched",
        "orderId": "ORD-12345",
        "customerName": "John Doe",
        "customerChatId": "123456789",
        "driverName": "Mike Smith",
        "driverPhone": "+1 (555) 123-4567",
        "trackingLink": "https://track.yourapp.com/orders/ORD-12345"
      },
      "expectedMessage": "üöÄ Order Dispatched!\n\nHi John Doe, your order #ORD-12345 is on its way!\n\nüë§ Driver: Mike Smith\nüìû Contact: +1 (555) 123-4567\n\nüìç Track your order: https://track.yourapp.com/orders/ORD-12345\n\nEnjoy your meal!",
      "curlCommand": "curl -X POST https://your-n8n-instance.app.n8n.cloud/webhook/order-status-update \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"orderStatus\": \"dispatched\",\n    \"orderId\": \"ORD-12345\",\n    \"customerName\": \"John Doe\",\n    \"customerChatId\": \"123456789\",\n    \"driverName\": \"Mike Smith\",\n    \"driverPhone\": \"+1 (555) 123-4567\",\n    \"trackingLink\": \"https://track.yourapp.com/orders/ORD-12345\"\n  }'"
    }
  },

  "fieldDescriptions": {
    "orderStatus": {
      "type": "string",
      "required": true,
      "allowedValues": ["order_received", "in_process", "dispatched"],
      "description": "The current status of the order"
    },
    "orderId": {
      "type": "string",
      "required": true,
      "description": "Unique identifier for the order"
    },
    "customerName": {
      "type": "string",
      "required": true,
      "description": "Name of the customer (used for personalization)"
    },
    "customerChatId": {
      "type": "string",
      "required": true,
      "description": "Telegram chat ID of the customer. Get it from: https://api.telegram.org/bot<YOUR_TOKEN>/getUpdates after customer messages your bot"
    },
    "orderItems": {
      "type": "string",
      "required": "only for order_received status",
      "description": "Comma-separated list of order items",
      "example": "2x Pizza, 1x Coke, 1x Salad"
    },
    "estimatedTime": {
      "type": "string",
      "required": "only for in_process status",
      "description": "Estimated preparation time in minutes",
      "example": "25"
    },
    "driverName": {
      "type": "string",
      "required": "only for dispatched status",
      "description": "Name of the delivery driver"
    },
    "driverPhone": {
      "type": "string",
      "required": "only for dispatched status",
      "description": "Contact phone number of the driver"
    },
    "trackingLink": {
      "type": "string",
      "required": "only for dispatched status",
      "description": "URL to track the order in real-time"
    }
  },

  "testingInstructions": {
    "step1": "Create a Telegram bot via @BotFather and get your bot token",
    "step2": "Start a conversation with your bot on Telegram",
    "step3": "Get your chat ID by visiting: https://api.telegram.org/bot<YOUR_TOKEN>/getUpdates",
    "step4": "Replace 'YOUR_CHAT_ID' in the payloads with your actual chat ID",
    "step5": "Replace the webhook URL with your n8n instance URL",
    "step6": "Run the curl commands or send POST requests using your preferred tool",
    "step7": "Check your Telegram for the notification messages"
  },

  "commonErrors": [
    {
      "error": "Unauthorized",
      "cause": "Invalid or missing bot token",
      "solution": "Check that TELEGRAM_BOT_TOKEN environment variable is set correctly in n8n"
    },
    {
      "error": "Chat not found",
      "cause": "Invalid chat ID or user hasn't started conversation with bot",
      "solution": "Make sure customer has started a conversation with your bot by clicking 'Start'"
    },
    {
      "error": "Bad Request: message text is empty",
      "cause": "Missing required fields in payload",
      "solution": "Check that all required fields for the specific status are included"
    },
    {
      "error": "Webhook not found",
      "cause": "Workflow is not activated or wrong URL",
      "solution": "Activate the workflow in n8n (toggle to green) and verify the webhook URL"
    }
  ],

  "integrationExamples": {
    "javascript": {
      "description": "Example integration in Node.js/Express",
      "code": "const axios = require('axios');\n\nasync function notifyCustomer(orderId, status, customerData) {\n  const webhookUrl = 'https://your-n8n-instance.app.n8n.cloud/webhook/order-status-update';\n  \n  const payload = {\n    orderStatus: status,\n    orderId: orderId,\n    customerName: customerData.name,\n    customerChatId: customerData.telegramChatId\n  };\n  \n  // Add status-specific fields\n  if (status === 'order_received') {\n    payload.orderItems = customerData.items;\n  } else if (status === 'in_process') {\n    payload.estimatedTime = customerData.estimatedTime;\n  } else if (status === 'dispatched') {\n    payload.driverName = customerData.driverName;\n    payload.driverPhone = customerData.driverPhone;\n    payload.trackingLink = customerData.trackingLink;\n  }\n  \n  try {\n    await axios.post(webhookUrl, payload);\n    console.log(`Notification sent for order ${orderId}`);\n  } catch (error) {\n    console.error('Failed to send notification:', error.message);\n  }\n}"
    },
    "python": {
      "description": "Example integration in Python/Flask",
      "code": "import requests\nimport json\n\ndef notify_customer(order_id, status, customer_data):\n    webhook_url = 'https://your-n8n-instance.app.n8n.cloud/webhook/order-status-update'\n    \n    payload = {\n        'orderStatus': status,\n        'orderId': order_id,\n        'customerName': customer_data['name'],\n        'customerChatId': customer_data['telegram_chat_id']\n    }\n    \n    # Add status-specific fields\n    if status == 'order_received':\n        payload['orderItems'] = customer_data['items']\n    elif status == 'in_process':\n        payload['estimatedTime'] = customer_data['estimated_time']\n    elif status == 'dispatched':\n        payload['driverName'] = customer_data['driver_name']\n        payload['driverPhone'] = customer_data['driver_phone']\n        payload['trackingLink'] = customer_data['tracking_link']\n    \n    try:\n        response = requests.post(webhook_url, json=payload)\n        response.raise_for_status()\n        print(f'Notification sent for order {order_id}')\n    except requests.exceptions.RequestException as e:\n        print(f'Failed to send notification: {e}')"
    },
    "php": {
      "description": "Example integration in PHP",
      "code": "<?php\nfunction notifyCustomer($orderId, $status, $customerData) {\n    $webhookUrl = 'https://your-n8n-instance.app.n8n.cloud/webhook/order-status-update';\n    \n    $payload = [\n        'orderStatus' => $status,\n        'orderId' => $orderId,\n        'customerName' => $customerData['name'],\n        'customerChatId' => $customerData['telegram_chat_id']\n    ];\n    \n    // Add status-specific fields\n    if ($status === 'order_received') {\n        $payload['orderItems'] = $customerData['items'];\n    } elseif ($status === 'in_process') {\n        $payload['estimatedTime'] = $customerData['estimated_time'];\n    } elseif ($status === 'dispatched') {\n        $payload['driverName'] = $customerData['driver_name'];\n        $payload['driverPhone'] = $customerData['driver_phone'];\n        $payload['trackingLink'] = $customerData['tracking_link'];\n    }\n    \n    $ch = curl_init($webhookUrl);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);\n    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($payload));\n    \n    $response = curl_exec($ch);\n    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    curl_close($ch);\n    \n    if ($httpCode === 200) {\n        error_log(\"Notification sent for order $orderId\");\n    } else {\n        error_log(\"Failed to send notification: HTTP $httpCode\");\n    }\n}\n?>"
    }
  }
}
